name "water_probe_acquanativa_ap3"

using_task_library "iodrivers_base"

import_types_from "water_probe_acquanativa_ap3Types.hpp"

using_library "water_probe_acquanativa_ap3"
import_types_from "water_probe_acquanativa_ap3/ProbeMeasurements.hpp"

task_context "Task", subclasses: "iodrivers_base::Task" do
    # This is the default from now on, and should not be removed. Rock will
    # transition to a setup where all components use a configuration step.
    needs_configuration

    # Data output, each field reflects a mesurement
    output_port "probe_measurements", "water_probe_acquanativa_ap3/ProbeMeasurements"

    # Amount of consecutive timeouts allowed before the component enters the
    # TIMEOUT state
    property "max_consecutive_timeouts", "/int", 10

    # Device address in the Modbus bus
    property "device_address", "/int", -1

    exception_states :TIMEOUT

    # If you want that component's updateHook() to be executed when the "input"
    # port gets data, uncomment this and comment the 'periodic' line
    # port_driven "input"
    # By default, the task will be periodic with a period of 0.1
    periodic 0.1
end